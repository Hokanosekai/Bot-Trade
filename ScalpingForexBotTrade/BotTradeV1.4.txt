//+------------------------------------------------------------------+
//|                                                      Version 1.4 |
//|                                                   by Hokanosekai |
//| Change log :                                                     |
//|   - Optimise trading conditions with external varriables         |
//|   - Open positions only at define hours                          |
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//| Importation de librarie pour ouvrir un trade                     |
//+------------------------------------------------------------------+

#include<Trade\Trade.mqh>;
CTrade trade;

//+------------------------------------------------------------------+
//| Definition des variables                                         |
//+------------------------------------------------------------------+

datetime OpenHours[] = {"08:00","08:30","08:45","08:55","09:00","09:30","09:45","09:55","10:00","10:30","10:45","10:55"};
datetime CloseHours[] = {"08:59","09:59","10:59"};

string StrOpenHours[] = {"08:00","08:30","08:45","08:55","09:00","09:30","09:45","09:55","10:00","10:30","10:45","10:55"};
string StrCloseHours[] = {"08:59","09:59","10:59"};

double OpenCandle[12];
double CloseCandle[3];

string Position = "Neutre";

string H8[] = {"NULL, ","NULL, ","NULL, ","NULL, "};
string H9[] = {"NULL, ","NULL, ","NULL, ","NULL, "};
string H10[] = {"NULL, ","NULL, ","NULL, ","NULL, "};

input string StartTradingTime = "8:00";
input string StopTradingTime = "12:00";

bool TradeAllowed = false;

string HoursMinutes;

string signal;
double price;

void OnTick()
  { 
  
      //+------------------------------------------------------------------+
      //| Toutes les periodes                                              |
      //+------------------------------------------------------------------+
      
      ENUM_TIMEFRAMES AllPeriod[4];
      AllPeriod[0] = PERIOD_H1;
      AllPeriod[1] = PERIOD_M30;
      AllPeriod[2] = PERIOD_M15;
      AllPeriod[3] = PERIOD_M5;
      
      //+------------------------------------------------------------------+
      //| Definition des heures                                            |
      //+------------------------------------------------------------------+
      
      datetime time = TimeLocal();
      string Day = TimeToString(time,TIME_DATE);
      HoursMinutes = TimeToString(time,TIME_MINUTES);
      string Secondes = TimeToString(time,TIME_SECONDS);
        
      //+------------------------------------------------------------------+
      //| Recuperation des Bougie aux heures precise                       |
      //+------------------------------------------------------------------+
        
      for(int i=0;i<ArraySize(OpenHours);i++)
        {
            if(HoursMinutes == StrOpenHours[i])
               OpenCandle[i] = iClose(_Symbol,AllPeriod[i%3],iBarShift(_Symbol,AllPeriod[i%3],Day + StringSubstr(OpenHours[i],10,6)));
        }

      //+------------------------------------------------------------------+
      //| Recuperation de la bougie de cloture                             |
      //+------------------------------------------------------------------+
      
      for(int i=0;i<ArraySize(CloseHours);i++)
        {
            if(HoursMinutes == StrCloseHours[i])
               CloseCandle[i] = iClose(_Symbol,PERIOD_H1,iBarShift(_Symbol,PERIOD_H1,Day + StringSubstr(CloseHours[i],10,6)));
        }

      //+------------------------------------------------------------------+
      //| Definition de la bougie la plus basse pour le SL                 |
      //+------------------------------------------------------------------+
      
      MqlRates PriceInfoLC[];
      ArraySetAsSeries(PriceInfoLC,true);
      int Data = CopyRates(_Symbol,_Period,0,100,PriceInfoLC);
      int LowestCandle;
      double Low[];
      ArraySetAsSeries(Low,true);
      CopyLow(_Symbol,_Period,0,100,Low);
      LowestCandle = ArrayMinimum(Low,0,100);
      
      //+------------------------------------------------------------------+
      //|                                                                  |
      //| Conditions de Trade                                              |
      //|                                                                  |
      //+------------------------------------------------------------------+

      //+------------------------------------------------------------------+
      //| Definitions bougies Haussieres / Baissiaires   8H - 9H           |
      //+------------------------------------------------------------------+
      
      if(Secondes == "09:00:00")
        {
            for(int i=0;i<ArraySize(H8);i++)
              {
                  //+------------------------------------------------------------------+
                  //| Definitions bougies Haussieres                                   |
                  //+------------------------------------------------------------------+
                  
                  if(OpenCandle[i] > CloseCandle[0])
                     H8[i] = "Haussier ";
                     
                  //+------------------------------------------------------------------+
                  //| Definitions bougies Baissieres                                   |
                  //+------------------------------------------------------------------+
                  
                  if(OpenCandle[i] < CloseCandle[0])
                     H8[i] = "Baissier ";
              }
              
           if(H8[0] == "Haussier " && H8[1] == "Haussier " && H8[2] == "Haussier " && H8[3] == "Haussier ")
              {
                  Position = "Acheteuse 8h - 9h";
                  price = OpenCandle[3];
                  signal = "buy";
              }
           if(H8[0] == "Baissier " && H8[1] == "Baissier " && H8[2] == "Baissier " && H8[3] == "Baissier ")
              {
                  Position = "Vendeuse 8h - 9h";
                  price = OpenCandle[3];
                  signal = "sell";
              }  
        }

      //+------------------------------------------------------------------+
      //| Definitions bougies Haussieres / Baissiaires  9H - 10H           |
      //+------------------------------------------------------------------+
           
      if(Secondes == "10:00:00")
        {
            for(int i=4;i<ArraySize(H9)+4;i++)
              {
                  //+------------------------------------------------------------------+
                  //| Definitions bougies Haussieres                                   |
                  //+------------------------------------------------------------------+
                  
                  if(OpenCandle[i] > CloseCandle[1])
                     H9[i-4] = "Haussier ";
                     
                  //+------------------------------------------------------------------+
                  //| Definitions bougies Baissieres                                   |
                  //+------------------------------------------------------------------+
                  
                  if(OpenCandle[i] < CloseCandle[1])
                     H9[i-4] = "Baissier ";
              }
              
           if(H9[0] == "Haussier " && H9[1] == "Haussier " && H9[2] == "Haussier " && H9[3] == "Haussier ")
              {
                  Position = "Acheteuse 9h - 10h";
                  price = OpenCandle[7];
                  signal = "buy";
              }
           if(H9[0] == "Baissier " && H9[1] == "Baissier " && H9[2] == "Baissier " && H9[3] == "Baissier ")
              {
                  Position = "Vendeuse 9h - 10h";
                  price = OpenCandle[7];
                  signal = "sell";
              }  
        }  

      //+------------------------------------------------------------------+
      //| Definitions bougies Haussieres / Baissiaires  10H - 11H          |
      //+------------------------------------------------------------------+ 
              
      if(Secondes == "11:00:00")
        {
            for(int i=8;i<ArraySize(H10)+8;i++)
              {
                  //+------------------------------------------------------------------+
                  //| Definitions bougies Haussieres                                   |
                  //+------------------------------------------------------------------+
                  
                  if(OpenCandle[i] > CloseCandle[2])
                     H10[i-8] = "Haussier ";
                     
                  //+------------------------------------------------------------------+
                  //| Definitions bougies Baissieres                                   |
                  //+------------------------------------------------------------------+
                  
                  if(OpenCandle[i] < CloseCandle[2])
                     H10[i-8] = "Baissier ";
              }
              
           if(H10[0] == "Haussier " && H10[1] == "Haussier " && H10[2] == "Haussier " && H10[3] == "Haussier ")
              {
                  Position = "Acheteuse 10h - 11h";
                  price = OpenCandle[11];
                  signal = "buy";
              }
           if(H10[0] == "Baissier " && H10[1] == "Baissier " && H10[2] == "Baissier " && H10[3] == "Baissier ")
              {
                  Position = "Vendeuse 10h - 11h";
                  price = OpenCandle[11];
                  signal = "sell";
              }  
        }
         
      //+------------------------------------------------------------------+
      //| Conditions prise positions                                       |
      //+------------------------------------------------------------------+
      
      //if(CheckTradingTime())
      
      if(signal == "buy" && price != 0)
        {
            if(Secondes == "09:00:00" || Secondes == "10:00:00" || Secondes == "11:00:00")
               if(PositionsTotal() == 0 && OrdersTotal() == 0)
               {
                  trade.BuyStop(
                     0.10,
                     price+2*_Point,
                     _Symbol,
                     price-5*_Point,
                     price+8*_Point,
                     ORDER_TIME_GTC,
                     0,
                     NULL
                  );
                  price = 0;
               }   
        }
        
      if(signal == "sell" && price != 0)
        {
            if(Secondes == "09:00:00" || Secondes == "10:00:00" || Secondes == "11:00:00")
               if(PositionsTotal() == 0 && OrdersTotal() == 0)
               {
                  trade.SellStop(
                     0.10,
                     price-2*_Point,
                     _Symbol,
                     price+5*_Point,
                     price-8*_Point,
                     ORDER_TIME_GTC,
                     0,
                     NULL
                  );
                  price = 0;
               }   
        }
      
      //+------------------------------------------------------------------+
      //| Affichage des données recuperer                                  |
      //+------------------------------------------------------------------+
      
      Comment(
         " ",Day," ",Secondes,
         "\n",
         "\n",OpenCandle[0],", ",OpenCandle[1],", ",OpenCandle[2],", ",OpenCandle[3],
         "\n",OpenCandle[4],", ",OpenCandle[5],", ",OpenCandle[6],", ",OpenCandle[7],
         "\n",
         "\n",StringSubstr(CloseHours[0],10,6)," : ",CloseCandle[0]," H8 : ",H8[0]," ",H8[1]," ",H8[2]," ",H8[3],
         "\n",StringSubstr(CloseHours[1],10,6)," : ",CloseCandle[1]," H9 : ",H9[0]," ",H9[1]," ",H9[2]," ",H9[3],
         "\n",StringSubstr(CloseHours[2],10,6)," : ",CloseCandle[2]," H10 : ",H10[0]," ",H10[1]," ",H10[2]," ",H10[3],
         "\n",
         "\n",Position
      );   
 
      //+------------------------------------------------------------------+
      //| Affichage de la bougie la plus basse                             |
      //+------------------------------------------------------------------+
      
      ObjectCreate(_Symbol,"Line1",OBJ_HLINE,0,0,PriceInfoLC[LowestCandle].low);
      ObjectSetInteger(0,"Line1",OBJPROP_COLOR,clrBlue);
      ObjectSetInteger(0,"Line1",OBJPROP_WIDTH,2);
      ObjectMove(_Symbol,"Line1",0,0,PriceInfoLC[LowestCandle].low);
  }
  
//+------------------------------------------------------------------+
//| Fonctions externes                                               |
//+------------------------------------------------------------------+
  
bool CheckTradingTime()
   {
      if (StringSubstr(HoursMinutes,0,5) == StartTradingTime)
      TradeAllowed == true;
      
      if (StringSubstr(HoursMinutes,0,5) == StopTradingTime)
      TradeAllowed == false;
      
      return TradeAllowed;
   }