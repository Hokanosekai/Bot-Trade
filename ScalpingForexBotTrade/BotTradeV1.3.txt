//+------------------------------------------------------------------+
//|                                                      Version 1.3 |
//|                                                   by Hokanosekai |
//| Change log :                                                     |
//|   - SellStop and BuyStop to replace Buy and Sell order           |
//|   - Optimisation of trading conditions                           |
//+------------------------------------------------------------------+

//+------------------------------------------------------------------+
//| Importation de librarie pour ouvrir un trade                     |
//+------------------------------------------------------------------+

#include<Trade\Trade.mqh>;
CTrade trade;

//+------------------------------------------------------------------+
//| Definition des variables                                         |
//+------------------------------------------------------------------+

datetime OpenHours[] = {"08:00:00","08:30:00","08:45:00","08:55:00","09:00:00","09:30:00","09:45:00","09:55:00","10:00:00","10:30:00","10:45:00","10:55:00"};
datetime CloseHours[] = {"09:00:00","10:00:00","11:00:00"};

string StrOpenHours[] = {"08:00:00","08:30:00","08:45:00","08:55:00","09:00:00","09:30:00","09:45:00","09:55:00","10:00:00","10:30:00","10:45:00","10:55:00"};
string StrCloseHours[] = {"09:00:00","10:00:00","11:00:00"};

double OpenCandle[12];
double CloseCandle[3];

string Position = "Neutre";

input string StartTradingTime = "8:00";
input string StopTradingTime = "12:00";

bool TradeAllowed = false;

string CurrentTime;

string signal;
double price;

void OnTick()
  { 
  
      //+------------------------------------------------------------------+
      //| Toutes les periodes                                              |
      //+------------------------------------------------------------------+
      
      ENUM_TIMEFRAMES AllPeriod[4];
      AllPeriod[0] = PERIOD_H1;
      AllPeriod[1] = PERIOD_M30;
      AllPeriod[2] = PERIOD_M15;
      AllPeriod[3] = PERIOD_M5;
      
      //+------------------------------------------------------------------+
      //| Definition des heures                                            |
      //+------------------------------------------------------------------+
      
      datetime time = TimeLocal();
      string Day = TimeToString(time,TIME_DATE);
      string HoursMinutes = TimeToString(time,TIME_SECONDS);   
      CurrentTime = TimeToString(time,TIME_MINUTES);
      string Secondes = TimeToString(time,TIME_SECONDS);
        
      //+------------------------------------------------------------------+
      //| Recuperation des Bougie aux heures precise                       |
      //+------------------------------------------------------------------+
        
      for(int i=0;i<ArraySize(OpenHours);i++)
        {
            if(HoursMinutes == StrOpenHours[i])
              {
                  OpenCandle[i] = iClose(_Symbol,AllPeriod[i%3],
                                          iBarShift(_Symbol,AllPeriod[i%3],Day + StringSubstr(OpenHours[i],10,9))
                                        );
              }
        }

      //+------------------------------------------------------------------+
      //| Recuperation de la bougie de cloture                             |
      //+------------------------------------------------------------------+
      
      for(int i=0;i<ArraySize(CloseHours);i++)
        {
            if(HoursMinutes == StrCloseHours[i])
              {
                  CloseCandle[i] = iClose(_Symbol,PERIOD_H1,
                                            iBarShift(_Symbol,PERIOD_H1,Day + StringSubstr(CloseHours[i],10,9))
                                         );
              }
        }

      //+------------------------------------------------------------------+
      //| Definition de la bougie la plus basse pour le SL                 |
      //+------------------------------------------------------------------+
      
      MqlRates PriceInfoLC[];
      ArraySetAsSeries(PriceInfoLC,true);
      int Data = CopyRates(_Symbol,_Period,0,100,PriceInfoLC);
      int LowestCandle;
      double Low[];
      ArraySetAsSeries(Low,true);
      CopyLow(_Symbol,_Period,0,100,Low);
      LowestCandle = ArrayMinimum(Low,0,100);
      
      //+------------------------------------------------------------------+
      //|                                                                  |
      //| Conditions de Trade                                              |
      //|                                                                  |
      //+------------------------------------------------------------------+
      
      if(Secondes > "08:59:59")
         {
         
            //+------------------------------------------------------------------+
            //| Position Acheteuse                                               |
            //+------------------------------------------------------------------+ 

            if(OpenCandle[0] > CloseCandle[0] && OpenCandle[1] > CloseCandle[0] && OpenCandle[2] > CloseCandle[0] && OpenCandle[3] > CloseCandle[0])
               {

                  price = OpenCandle[3];
                  signal = "buy";
                  Position = "Acheteuse 8h - 9h";

               }
               
            //+------------------------------------------------------------------+
            //| Position Vendeuse                                                |
            //+------------------------------------------------------------------+
               
            if(OpenCandle[0] < CloseCandle[0] && OpenCandle[1] < CloseCandle[0] && OpenCandle[2] < CloseCandle[0] && OpenCandle[3] < CloseCandle[0])
               {

                  price = OpenCandle[3];
                  signal = "sell";
                  Position = "Vendeuse 8h - 9h";

               }
         }
         
         if(Secondes > "09:59:59")
         {
         
            //+------------------------------------------------------------------+
            //| Position Acheteuse                                               |
            //+------------------------------------------------------------------+ 

            if(OpenCandle[4] > CloseCandle[1] && OpenCandle[5] > CloseCandle[1] && OpenCandle[6] > CloseCandle[1] && OpenCandle[7] > CloseCandle[1])
               {

                  price = OpenCandle[7];
                  signal = "buy";
                  Position = "Acheteuse 9h - 10h";

               }
               
            //+------------------------------------------------------------------+
            //| Position Vendeuse                                                |
            //+------------------------------------------------------------------+
               
            if(OpenCandle[4] < CloseCandle[1] && OpenCandle[5] < CloseCandle[1] && OpenCandle[6] < CloseCandle[1] && OpenCandle[7] < CloseCandle[1])
               {

                  price = OpenCandle[7];
                  signal = "sell";
                  Position = "Vendeuse 9h - 10h";

               }
         }
         
         if(Secondes > "10:59:59")
         {
         
            //+------------------------------------------------------------------+
            //| Position Acheteuse                                               |
            //+------------------------------------------------------------------+ 

            if(OpenCandle[8] > CloseCandle[2] && OpenCandle[9] > CloseCandle[2] && OpenCandle[10] > CloseCandle[2] && OpenCandle[11] > CloseCandle[2])
               {

                  price = OpenCandle[11];
                  signal = "buy";
                  Position = "Acheteuse 10h - 11h";

               }
               
            //+------------------------------------------------------------------+
            //| Position Vendeuse                                                |
            //+------------------------------------------------------------------+
               
            if(OpenCandle[8] < CloseCandle[2] && OpenCandle[9] < CloseCandle[2] && OpenCandle[10] < CloseCandle[2] && OpenCandle[11] < CloseCandle[2])
               {

                  price = OpenCandle[11];
                  signal = "sell";
                  Position = "Vendeuse 10h - 11h";

               }
         }
           
//      if(Secondes == "09:59:59")
//         {
//         
//            //+------------------------------------------------------------------+
//            //| Position Acheteuse                                               |
//            //+------------------------------------------------------------------+ 
//
//            if(OpenCandle[4] > CloseCandle[1])
//               {
//                  if(OpenCandle[5] > CloseCandle[1])
//                     {
//                        if(OpenCandle[6] > CloseCandle[1])
//                           {
//                              if(OpenCandle[7] > CloseCandle[1])
//                                 {
//                                    tradeBuy.Buy(0.10,NULL,OpenCandle[7],OpenCandle[7]-200*_Point,OpenCandle[7]+200*_Point,"Acheteuse 9h - 10h");
//                                    Position = "Acheteuse 9h - 10h";
//                                    
//                                 }
//                           }
//                     }
//               }
//               
//            //+------------------------------------------------------------------+
//            //| Position Vendeuse                                                |
//            //+------------------------------------------------------------------+
//               
//            if(OpenCandle[4] < CloseCandle[1])
//               {
//                  if(OpenCandle[5] < CloseCandle[1])
//                     {
//                        if(OpenCandle[6] < CloseCandle[1])
//                           {
//                              if(OpenCandle[7] < CloseCandle[1])
//                                 {
//                                    tradeSell.Sell(0.10,NULL,OpenCandle[7],OpenCandle[7]-150*_Point,OpenCandle[7]+200*_Point,"Vendeuse 9h - 10h");
//                                    Position = "Vendeuse 9h - 10h";
//                                    
//                                 }
//                           }
//                     }
//               }
//         }
//           
//      if(Secondes == "10:59:59")
//         {
//         
//            //+------------------------------------------------------------------+
//            //| Position Acheteuse                                               |
//            //+------------------------------------------------------------------+ 
//
//            if(OpenCandle[8] > CloseCandle[2])
//               {
//                  if(OpenCandle[9] > CloseCandle[2])
//                     {
//                        if(OpenCandle[10] > CloseCandle[2])
//                           {
//                              if(OpenCandle[11] > CloseCandle[2])
//                                 {
//                                    tradeBuy.Buy(0.10,NULL,OpenCandle[11],OpenCandle[11]-150*_Point,OpenCandle[11]+200*_Point,"Acheteuse 10h - 11h");
//                                    Position = "Acheteuse 10h - 11h";
//                                    
//                                 }
//                           }
//                     }
//               }
//               
//            //+------------------------------------------------------------------+
//            //| Position Vendeuse                                                |
//            //+------------------------------------------------------------------+
//               
//            if(OpenCandle[8] < CloseCandle[2])
//               {
//                  if(OpenCandle[9] < CloseCandle[2])
//                     {
//                        if(OpenCandle[10] < CloseCandle[2])
//                           {
//                              if(OpenCandle[11] < CloseCandle[2])
//                                 {
//                                    tradeSell.Sell(0.10,NULL,OpenCandle[11],OpenCandle[11]-150*_Point,OpenCandle[11]+200*_Point,"Vendeuse 10h - 11h");
//                                    Position = "Vendeuse 10h - 11h";
//                                    
//                                 }
//                           }
//                     }
//               }
//         }


      //+------------------------------------------------------------------+
      //| Conditions prise positions                                       |
      //+------------------------------------------------------------------+
      
      //if(CheckTradingTime())
      if(signal == "buy" && price != 0)
        {
            if(PositionsTotal() == 0 && OrdersTotal() == 0)
            trade.BuyStop(
               0.10,
               price,
               _Symbol,
               0,
               price+20*_Point,
               ORDER_TIME_GTC,
               0,
               NULL
            );
            price = 0;
            
        }
      if(signal == "sell" && price != 0)
        {
            if(PositionsTotal() == 0 && OrdersTotal() == 0)
            trade.SellStop(
               0.10,
               price,
               _Symbol,
               0,
               price-20*_Point,
               ORDER_TIME_GTC,
               0,
               NULL
            );
            price = 0;
            
        }
      
      //+------------------------------------------------------------------+
      //| Affichage des données recuperer                                  |
      //+------------------------------------------------------------------+

      Comment(
         " ",Day," ",HoursMinutes," : ",Secondes,
         "\n",
         "\n",StringSubstr(OpenHours[0],10,9)," : ",OpenCandle[0],
         "\n",StringSubstr(OpenHours[1],10,9)," : ",OpenCandle[1],
         "\n",StringSubstr(OpenHours[2],10,9)," : ",OpenCandle[2],
         "\n",StringSubstr(OpenHours[3],10,9)," : ",OpenCandle[3],
         "\n",StringSubstr(OpenHours[8],10,9)," : ",OpenCandle[8],
         "\n",StringSubstr(OpenHours[9],10,9)," : ",OpenCandle[9],
         "\n",StringSubstr(OpenHours[10],10,9)," : ",OpenCandle[10],
         "\n",StringSubstr(OpenHours[11],10,9)," : ",OpenCandle[11],
         "\n",
         "\n",StringSubstr(CloseHours[0],10,9)," : ",CloseCandle[0],
         "\n",StringSubstr(CloseHours[1],10,9)," : ",CloseCandle[1],
         "\n",StringSubstr(CloseHours[2],10,9)," : ",CloseCandle[2],
         "\n",
         "\n",Position
      );   
 
      //+------------------------------------------------------------------+
      //| Affichage de la bougie la plus basse                             |
      //+------------------------------------------------------------------+
      
      ObjectCreate(_Symbol,"Line1",OBJ_HLINE,0,0,PriceInfoLC[LowestCandle].low);
      ObjectSetInteger(0,"Line1",OBJPROP_COLOR,clrBlue);
      ObjectSetInteger(0,"Line1",OBJPROP_WIDTH,2);
      ObjectMove(_Symbol,"Line1",0,0,PriceInfoLC[LowestCandle].low);
  }
  
  
//+------------------------------------------------------------------+
//| Fonctions externes                                               |
//+------------------------------------------------------------------+
  
bool CheckTradingTime()
   {
      if (StringSubstr(CurrentTime,0,5) == StartTradingTime)
      TradeAllowed == true;
      
      if (StringSubstr(CurrentTime,0,5) == StopTradingTime)
      TradeAllowed == false;
      
      return TradeAllowed;
   }
   
